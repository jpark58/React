{"ast":null,"code":"var _jsxFileName = \"/Users/jinseopark/Desktop/Projects/reacts/reactBird/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            data: mainPosts[mainPosts.length - 1].id\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, hasMorePost, loadPostsLoading]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/jinseopark/Desktop/Projects/reacts/reactBird/pages/index.js"],"names":["AppLayout","PostForm","PostCard","useSelector","useEffect","useDispatch","LOAD_POSTS_REQUEST","Home","dispatch","me","state","user","mainPosts","hasMorePosts","loadPostsLoading","post","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","hasMorePost","data","length","id","addEventListener","removeEventListener","map"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAASN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,MAAgDX,WAAW,CAC9DO,KAAD,IAAWA,KAAK,CAACK,IAD8C,CAAjE;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAF,EAAAA,SAAS,CAAC,MAAM;AACd,aAASa,QAAT,GAAoB;AAClB,UACEC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIC,WAAW,IAAI,CAACV,gBAApB,EAAsC;AACpCN,UAAAA,QAAQ,CAAC;AACPQ,YAAAA,IAAI,EAAEV,kBADC;AAEPmB,YAAAA,IAAI,EAAEb,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAT,CAAgCC;AAF/B,WAAD,CAAR;AAID;AACF;AACF;;AACDT,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCX,QAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCZ,QAArC;AACD,KAFD;AAGD,GAlBQ,EAkBN,CAACL,SAAD,EAAYY,WAAZ,EAAyBV,gBAAzB,CAlBM,CAAT;AAoBA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,EAEGG,SAAS,CAACkB,GAAV,CAAef,IAAD,IACb,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACY,EAApB;AAAwB,IAAA,IAAI,EAAEZ,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CADF;AAQD,CA1CD;;AA4CA,eAAeR,IAAf","sourcesContent":["import AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n\n  const { me } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(\n    (state) => state.post\n  );\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST,\n    });\n  }, []);\n\n  useEffect(() => {\n    function onScroll() {\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePost && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            data: mainPosts[mainPosts.length - 1].id,\n          });\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, hasMorePost, loadPostsLoading]);\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post) => (\n        <PostCard key={post.id} post={post} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}