{"ast":null,"code":"var _jsxFileName = \"/Users/jinseopark/Desktop/Projects/reacts/reactBird/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nfunction CommentForm({\n  post\n}) {\n  const dispatch = useDispatch();\n  const {\n    0: commentText,\n    1: setCommentText\n  } = useState('');\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const onSubmitComment = useCallback(() => {\n    console.log(commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  const onChangeCommentText = useCallback(e => {\n    setCommentText(e.target.value);\n  }, []);\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n}\n\nexport default CommentForm;","map":{"version":3,"sources":["/Users/jinseopark/Desktop/Projects/reacts/reactBird/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useState","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","commentText","setCommentText","id","state","user","me","addCommentDone","onSubmitComment","console","log","type","data","content","postId","userId","onChangeCommentText","e","target","value","useEffect","position","margin","right","bottom"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAA+B;AAC7B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAA,OAACM,WAAD;AAAA,OAAcC;AAAd,MAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMS,EAAE,GAAGP,WAAW,CAAEQ,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAqBX,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACL,IAAlB,CAAtC;AAEA,QAAMS,eAAe,GAAGf,WAAW,CAAC,MAAM;AACxCgB,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACAD,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEd,mBADC;AAEPe,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEZ,WAAX;AAAwBa,QAAAA,MAAM,EAAEf,IAAI,CAACI,EAArC;AAAyCY,QAAAA,MAAM,EAAEZ;AAAjD;AAFC,KAAD,CAAR;AAID,GANkC,EAMhC,CAACF,WAAD,EAAcE,EAAd,CANgC,CAAnC;AAQA,QAAMa,mBAAmB,GAAGvB,WAAW,CAAEwB,CAAD,IAAO;AAC7Cf,IAAAA,cAAc,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFsC,EAEpC,EAFoC,CAAvC;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIb,cAAJ,EAAoB;AAClBL,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACK,cAAD,CAJM,CAAT;AAMA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEa,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,QAAP;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,KAAK,EAAErB,WAFT;AAGE,IAAA,QAAQ,EAAEe,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEK,MAAAA,QAAQ,EAAE,UAAZ;AAAwBE,MAAAA,KAAK,EAAE,CAA/B;AAAkCC,MAAAA,MAAM,EAAE,CAAC;AAA3C,KADT;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,QAAQ,EAAC,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF,CADF;AAkBD;;AAED,eAAe1B,WAAf","sourcesContent":["import { Button, Form, Input } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nfunction CommentForm({ post }) {\n  const dispatch = useDispatch();\n  const [commentText, setCommentText] = useState('');\n  const id = useSelector((state) => state.user.me?.id);\n  const { addCommentDone } = useSelector((state) => state.post);\n\n  const onSubmitComment = useCallback(() => {\n    console.log(commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, postId: post.id, userId: id },\n    });\n  }, [commentText, id]);\n\n  const onChangeCommentText = useCallback((e) => {\n    setCommentText(e.target.value);\n  }, []);\n\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: 'relative', margin: 0 }}>\n        <Input.TextArea\n          rows={4}\n          value={commentText}\n          onChange={onChangeCommentText}\n        />\n        <Button\n          style={{ position: 'absolute', right: 0, bottom: -40 }}\n          type=\"primary\"\n          htmlType=\"submit\"\n        >\n          삐약\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}