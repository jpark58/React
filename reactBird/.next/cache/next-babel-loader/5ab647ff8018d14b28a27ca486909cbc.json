{"ast":null,"code":"import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["/Users/jinseopark/Desktop/Projects/react/sagas/user.js"],"names":["all","fork","takeLatest","put","delay","logInAPI","data","axios","post","logIn","action","type","err","error","response","logOutAPI","logOut","watchLogin","watchLogOut","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,QAAkD,oBAAlD;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,EAAyBF,IAAzB,CAAP;AACD;;AAED,UAAUG,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,gBADE;AAERL,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOM,GAAP,EAAY;AACZ,UAAMT,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,gBADE;AAERE,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaR;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASS,SAAT,GAAqB;AACnB,SAAOR,KAAK,CAACC,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUQ,MAAV,GAAmB;AACjB,MAAI;AACF,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE;AADE,KAAD,CAAT;AAGD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZ,UAAMT,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,iBADE;AAERE,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaR;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUW,UAAV,GAAuB;AACrB,QAAMf,UAAU,CAAC,gBAAD,EAAmBO,KAAnB,CAAhB;AACD;;AAED,UAAUS,WAAV,GAAwB;AACtB,QAAMhB,UAAU,CAAC,iBAAD,EAAoBc,MAApB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMnB,GAAG,CAAC,CAACC,IAAI,CAACgB,UAAD,CAAL,EAAmBhB,IAAI,CAACiB,WAAD,CAAvB,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut)]);\n}\n"]},"metadata":{},"sourceType":"module"}