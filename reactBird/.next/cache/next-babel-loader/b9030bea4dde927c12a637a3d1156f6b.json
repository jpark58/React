{"ast":null,"code":"var _jsxFileName = \"/Users/jinseopark/Desktop/Projects/reacts/reactBird/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { Avatar, Button, Card, Comment, List, Popover } from 'antd';\nimport ButtonGroup from 'antd/lib/button/button-group';\nimport React, { useCallback, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { useDispatch } from 'react-redux';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\n\nfunction PostCard(_ref) {\n  _s();\n\n  var _this = this;\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector2.me;\n\n  var id = me && me.id;\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: 'retweer',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: 'comment',\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: 'more',\n      content: __jsx(ButtonGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        loading: removePostLoading,\n        onClick: onRemovePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 27\n          }\n        }, item.User.nickname[0]),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })));\n}\n\n_s(PostCard, \"b+fhWW7ku3T1Lihon8Mxc5V17Lo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/jinseopark/Desktop/Projects/reacts/reactBird/components/PostCard.js"],"names":["EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","Avatar","Button","Card","Comment","List","Popover","ButtonGroup","React","useCallback","useState","useSelector","PostImages","CommentForm","PostCardContent","useDispatch","REMOVE_POST_REQUEST","PostCard","post","dispatch","state","removePostLoading","liked","setLiked","commentFormOpened","setCommentFormOpened","user","me","id","onToggleLike","prev","onToggleComment","onRemovePost","type","data","marginBottom","Images","User","nickname","content","Comments","length","item"],"mappings":";;;;AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,eAHF,EAIEC,eAJF,EAKEC,YALF,QAMO,mBANP;AAOA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwCC,IAAxC,EAA8CC,OAA9C,QAA6D,MAA7D;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,SAASC,QAAT,OAA4B;AAAA;;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAC1B,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,qBAA8BJ,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACF,IAAjB;AAAA,GAAD,CAAzC;AAAA,MAAQG,iBAAR,gBAAQA,iBAAR;;AACA,kBAA0BX,QAAQ,CAAC,KAAD,CAAlC;AAAA,MAAOY,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAkDb,QAAQ,CAAC,KAAD,CAA1D;AAAA,MAAOc,iBAAP;AAAA,MAA0BC,oBAA1B;;AACA,sBAAed,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACM,IAAjB;AAAA,GAAD,CAA1B;AAAA,MAAQC,EAAR,iBAAQA,EAAR;;AACA,MAAMC,EAAE,GAAGD,EAAE,IAAIA,EAAE,CAACC,EAApB;AAEA,MAAMC,YAAY,GAAGpB,WAAW,CAAC,YAAM;AACrCc,IAAAA,QAAQ,CAAC,UAACO,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAAR;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,MAAMC,eAAe,GAAGtB,WAAW,CAAC,YAAM;AACxCgB,IAAAA,oBAAoB,CAAC,UAACK,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAApB;AACD,GAFkC,EAEhC,EAFgC,CAAnC;AAIA,MAAME,YAAY,GAAGvB,WAAW,CAAC,YAAM;AACrCU,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAEjB,mBADC;AAEPkB,MAAAA,IAAI,EAAEhB,IAAI,CAACU;AAFJ,KAAD,CAAR;AAID,GAL+B,EAK7B,EAL6B,CAAhC;AAOA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEO,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,KAAK,EAAEjB,IAAI,CAACkB,MAAL,CAAY,CAAZ,KAAkB,MAAC,UAAD;AAAY,MAAA,MAAM,EAAElB,IAAI,CAACkB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD3B;AAEE,IAAA,OAAO,EAAE,CACP,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,EAEPd,KAAK,GACH,MAAC,YAAD;AACE,MAAA,YAAY,EAAC,SADf;AAEE,MAAA,GAAG,EAAC,OAFN;AAGE,MAAA,OAAO,EAAEO,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,GAOH,MAAC,aAAD;AAAe,MAAA,GAAG,EAAC,OAAnB;AAA2B,MAAA,OAAO,EAAEA,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATK,EAWP,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAE,SAAtB;AAAiC,MAAA,OAAO,EAAEE,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXO,EAYP,MAAC,OAAD;AACE,MAAA,GAAG,EAAE,MADP;AAEE,MAAA,OAAO,EACL,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,EAAE,IAAIV,IAAI,CAACmB,IAAL,CAAUT,EAAV,KAAiBA,EAAvB,GACC,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,MAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEP,iBAFX;AAGE,QAAA,OAAO,EAAEW,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADD,GAYC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbJ,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAqBE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CAZO,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAuCE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASd,IAAI,CAACmB,IAAL,CAAUC,QAAV,CAAmB,CAAnB,CAAT,CADV;AAEE,IAAA,KAAK,EAAEpB,IAAI,CAACmB,IAAL,CAAUC,QAFnB;AAGE,IAAA,WAAW,EAAE,MAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEpB,IAAI,CAACqB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,CADF,EA8CGf,iBAAiB,IAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAEN,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AACE,IAAA,MAAM,YAAKA,IAAI,CAACsB,QAAL,CAAcC,MAAnB,8BADR;AAEE,IAAA,UAAU,EAAC,YAFb;AAGE,IAAA,UAAU,EAAEvB,IAAI,CAACsB,QAHnB;AAIE,IAAA,UAAU,EAAE,oBAACE,IAAD;AAAA,aACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AACE,QAAA,MAAM,EAAEA,IAAI,CAACL,IAAL,CAAUC,QADpB;AAEE,QAAA,MAAM,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASI,IAAI,CAACL,IAAL,CAAUC,QAAV,CAAmB,CAAnB,CAAT,CAFV;AAGE,QAAA,OAAO,EAAEI,IAAI,CAACH,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADU;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA/CJ,CADF;AAsED;;GA7FQtB,Q;UACUF,W,EACaJ,W,EAGfA,W;;;KALRM,Q;AA+FT,eAAeA,QAAf","sourcesContent":["import {\n  EllipsisOutlined,\n  HeartOutlined,\n  MessageOutlined,\n  RetweetOutlined,\n  HeartTwoTone,\n} from '@ant-design/icons';\nimport { Avatar, Button, Card, Comment, List, Popover } from 'antd';\nimport ButtonGroup from 'antd/lib/button/button-group';\nimport React, { useCallback, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { useDispatch } from 'react-redux';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\n\nfunction PostCard({ post }) {\n  const dispatch = useDispatch();\n  const { removePostLoading } = useSelector((state) => state.post);\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const { me } = useSelector((state) => state.user);\n  const id = me && me.id;\n\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id,\n    });\n  }, []);\n\n  return (\n    <div style={{ marginBottom: 20 }}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key={'retweer'} />,\n          liked ? (\n            <HeartTwoTone\n              twoToneColor=\"#eb2f96\"\n              key=\"heart\"\n              onClick={onToggleLike}\n            />\n          ) : (\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\n          ),\n          <MessageOutlined key={'comment'} onClick={onToggleComment} />,\n          <Popover\n            key={'more'}\n            content={\n              <ButtonGroup>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button\n                      type=\"danger\"\n                      loading={removePostLoading}\n                      onClick={onRemovePost}\n                    >\n                      삭제\n                    </Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </ButtonGroup>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={<PostCardContent postData={post.content} />}\n        />\n      </Card>\n      {commentFormOpened && (\n        <div>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments.length}개의 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </div>\n      )}\n      {/*  */}\n      {/* <Comments /> */}\n    </div>\n  );\n}\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}