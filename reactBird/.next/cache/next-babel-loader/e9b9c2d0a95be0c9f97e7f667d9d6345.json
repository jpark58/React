{"ast":null,"code":"var _jsxFileName = \"/Users/jinseopark/Desktop/Projects/reacts/reactBird/components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nfunction CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      commentText = _useState[0],\n      setCommentText = _useState[1];\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone,\n      addCommentLoading = _useSelector.addCommentLoading;\n\n  var onSubmitComment = useCallback(function () {\n    console.log(commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  var onChangeCommentText = useCallback(function (e) {\n    setCommentText(e.target.value);\n  }, []);\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40,\n      zIndex: 1\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addCommentLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n}\n\n_s(CommentForm, \"EPTnAazOwnCx2uINLWSwi3LFxMc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = CommentForm;\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/jinseopark/Desktop/Projects/reacts/reactBird/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useState","useEffect","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","commentText","setCommentText","id","state","user","me","addCommentDone","addCommentLoading","onSubmitComment","console","log","type","data","content","postId","userId","onChangeCommentText","e","target","value","position","margin","right","bottom","zIndex"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,SAASC,WAAT,OAA+B;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAC7B,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AACA,kBAAsCF,QAAQ,CAAC,EAAD,CAA9C;AAAA,MAAOQ,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAMC,EAAE,GAAGP,WAAW,CAAC,UAACQ,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AACA,qBAA8CP,WAAW,CACvD,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACL,IAAjB;AAAA,GADuD,CAAzD;AAAA,MAAQQ,cAAR,gBAAQA,cAAR;AAAA,MAAwBC,iBAAxB,gBAAwBA,iBAAxB;;AAIA,MAAMC,eAAe,GAAGjB,WAAW,CAAC,YAAM;AACxCkB,IAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;AACAD,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEf,mBADC;AAEPgB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEb,WAAX;AAAwBc,QAAAA,MAAM,EAAEhB,IAAI,CAACI,EAArC;AAAyCa,QAAAA,MAAM,EAAEb;AAAjD;AAFC,KAAD,CAAR;AAID,GANkC,EAMhC,CAACF,WAAD,EAAcE,EAAd,CANgC,CAAnC;AAQA,MAAMc,mBAAmB,GAAGzB,WAAW,CAAC,UAAC0B,CAAD,EAAO;AAC7ChB,IAAAA,cAAc,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFsC,EAEpC,EAFoC,CAAvC;AAIA1B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIa,cAAJ,EAAoB;AAClBL,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACK,cAAD,CAJM,CAAT;AAMA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEY,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,QAAP;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,KAAK,EAAErB,WAFT;AAGE,IAAA,QAAQ,EAAEgB,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEI,MAAAA,QAAQ,EAAE,UAAZ;AAAwBE,MAAAA,KAAK,EAAE,CAA/B;AAAkCC,MAAAA,MAAM,EAAE,CAAC,EAA3C;AAA+CC,MAAAA,MAAM,EAAE;AAAvD,KADT;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,QAAQ,EAAC,QAHX;AAIE,IAAA,OAAO,EAAEjB,iBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF,CADF;AAmBD;;GA7CQV,W;UACUH,W,EAENC,W,EACmCA,W;;;KAJvCE,W;AA+CT,eAAeA,WAAf","sourcesContent":["import { Button, Form, Input } from 'antd';\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nfunction CommentForm({ post }) {\n  const dispatch = useDispatch();\n  const [commentText, setCommentText] = useState('');\n  const id = useSelector((state) => state.user.me?.id);\n  const { addCommentDone, addCommentLoading } = useSelector(\n    (state) => state.post\n  );\n\n  const onSubmitComment = useCallback(() => {\n    console.log(commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, postId: post.id, userId: id },\n    });\n  }, [commentText, id]);\n\n  const onChangeCommentText = useCallback((e) => {\n    setCommentText(e.target.value);\n  }, []);\n\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: 'relative', margin: 0 }}>\n        <Input.TextArea\n          rows={4}\n          value={commentText}\n          onChange={onChangeCommentText}\n        />\n        <Button\n          style={{ position: 'absolute', right: 0, bottom: -40, zIndex: 1 }}\n          type=\"primary\"\n          htmlType=\"submit\"\n          loading={addCommentLoading}\n        >\n          삐약\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}