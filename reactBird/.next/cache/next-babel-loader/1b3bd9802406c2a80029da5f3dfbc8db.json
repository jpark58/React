{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from 'immer';\nexport const initialState = {\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: 'Jinseo Park',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: '부기초'\n  }, {\n    nickname: 'Chanho Lee'\n  }, {\n    nickname: 'neue zeal'\n  }],\n  Followers: [{\n    nickname: '부기초'\n  }, {\n    nickname: 'Chanho Lee'\n  }, {\n    nickname: 'neue zeal'\n  }]\n});\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'SFOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport const loginAction = data => {\n  return dispatch => {\n    dispatch(loginRequestAction());\n  };\n};\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\nexport const logoutSuccessAction = () => {\n  return {\n    type: LOG_OUT_SUCCESS\n  };\n};\nexport const logoutFailureAction = () => {\n  return {\n    type: LOG_OUT_FAILURE\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInError = null;\n        draft.logInDone = false;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutError = null;\n        draft.logOutDone = false;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpError = null;\n        draft.signUpDone = false;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpLoading: false,\n          signUpError: action.error\n        });\n\n      case CHANGE_NICKNAME_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          changeNicknameLoading: true,\n          changeNicknameDone: false,\n          changeNicknameError: null\n        });\n\n      case CHANGE_NICKNAME_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          changeNicknameLoading: false,\n          changeNicknameDone: true\n        });\n\n      case CHANGE_NICKNAME_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          changeNicknameLoading: false,\n          changeNicknameError: action.error\n        });\n\n      case ADD_POST_TO_ME:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          me: _objectSpread(_objectSpread({}, state.me), {}, {\n            Posts: [{\n              id: action.data\n            }, ...state.me.Posts]\n          })\n        });\n\n      case REMOVE_POST_OF_ME:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          me: _objectSpread(_objectSpread({}, state.me), {}, {\n            Posts: state.me.Posts.filter(v => v.id !== action.data)\n          })\n        });\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jinseopark/Desktop/Projects/reacts/reactBird/reducers/user.js"],"names":["produce","initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","dummyUser","data","nickname","id","Posts","Followings","Followers","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginAction","dispatch","loginRequestAction","type","logoutRequestAction","logoutSuccessAction","logoutFailureAction","reducer","state","action","draft","error","filter","v"],"mappings":"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","sourcesContent":["import produce from 'immer';\n\nexport const initialState = {\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {},\n};\n\nconst dummyUser = (data) => ({\n  ...data,\n  nickname: 'Jinseo Park',\n  id: 1,\n  Posts: [{ id: 1 }],\n  Followings: [\n    { nickname: '부기초' },\n    { nickname: 'Chanho Lee' },\n    { nickname: 'neue zeal' },\n  ],\n  Followers: [\n    { nickname: '부기초' },\n    { nickname: 'Chanho Lee' },\n    { nickname: 'neue zeal' },\n  ],\n});\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\n\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'SFOLLOW_FAILURE';\n\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nexport const loginAction = (data) => {\n  return (dispatch) => {\n    dispatch(loginRequestAction());\n  };\n};\n\nexport const loginRequestAction = (data) => {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data,\n  };\n};\n\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST,\n  };\n};\n\nexport const logoutSuccessAction = () => {\n  return {\n    type: LOG_OUT_SUCCESS,\n  };\n};\n\nexport const logoutFailureAction = () => {\n  return {\n    type: LOG_OUT_FAILURE,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInError = null;\n        draft.logInDone = false;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutError = null;\n        draft.logOutDone = false;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpError = null;\n        draft.signUpDone = false;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        return {\n          ...state,\n          signUpLoading: false,\n          signUpError: action.error,\n        };\n      case CHANGE_NICKNAME_REQUEST:\n        return {\n          ...state,\n          changeNicknameLoading: true,\n          changeNicknameDone: false,\n          changeNicknameError: null,\n        };\n      case CHANGE_NICKNAME_SUCCESS:\n        return {\n          ...state,\n          changeNicknameLoading: false,\n          changeNicknameDone: true,\n        };\n      case CHANGE_NICKNAME_FAILURE:\n        return {\n          ...state,\n          changeNicknameLoading: false,\n          changeNicknameError: action.error,\n        };\n      case ADD_POST_TO_ME:\n        return {\n          ...state,\n          me: {\n            ...state.me,\n            Posts: [{ id: action.data }, ...state.me.Posts],\n          },\n        };\n      case REMOVE_POST_OF_ME:\n        return {\n          ...state,\n          me: {\n            ...state.me,\n            Posts: state.me.Posts.filter((v) => v.id !== action.data),\n          },\n        };\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}