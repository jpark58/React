{"ast":null,"code":"import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport shortid from 'shortid';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME } from '../reducers/user';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  console.log('action : ' + `${action}`);\n\n  try {\n    yield delay(1000);\n    const id = shortid.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: aciton.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: action\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* addComment(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/jinseopark/Desktop/Projects/reacts/reactBird/sagas/post.js"],"names":["all","fork","takeLatest","put","delay","shortid","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","addPostAPI","data","axios","post","addPost","action","console","log","id","generate","type","content","aciton","err","error","response","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,kBAPP;AAQA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOC,KAAK,CAACC,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAP;AACD;;AAED,UAAUG,OAAV,CAAkBC,MAAlB,EAA0B;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAe,GAAEF,MAAO,EAApC;;AACA,MAAI;AACF,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAMiB,EAAE,GAAGhB,OAAO,CAACiB,QAAR,EAAX;AACA,UAAMnB,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEhB,gBADE;AAERO,MAAAA,IAAI,EAAE;AACJO,QAAAA,EADI;AAEJG,QAAAA,OAAO,EAAEC,MAAM,CAACX;AAFZ;AAFE,KAAD,CAAT;AAOA,UAAMX,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEX,cADE;AAERE,MAAAA,IAAI,EAAEI;AAFE,KAAD,CAAT;AAID,GAdD,CAcE,OAAOQ,GAAP,EAAY;AACZ,UAAMvB,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEf,gBADE;AAERmB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAad;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUe,UAAV,CAAqBX,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEb,mBADE;AAERI,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOY,GAAP,EAAY;AACZ,UAAMvB,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEZ,mBADE;AAERgB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAad;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUgB,YAAV,GAAyB;AACvB,QAAM5B,UAAU,CAACI,gBAAD,EAAmBW,OAAnB,CAAhB;AACD;;AAED,UAAUc,eAAV,GAA4B;AAC1B,QAAM7B,UAAU,CAACO,mBAAD,EAAsBoB,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMhC,GAAG,CAAC,CAACC,IAAI,CAAC6B,YAAD,CAAL,EAAqB7B,IAAI,CAAC8B,eAAD,CAAzB,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport shortid from 'shortid';\nimport {\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n} from '../reducers/post';\nimport { ADD_POST_TO_ME } from '../reducers/user';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  console.log('action : ' + `${action}`);\n  try {\n    yield delay(1000);\n    const id = shortid.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: aciton.data,\n      },\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: action,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* addComment(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n"]},"metadata":{},"sourceType":"module"}